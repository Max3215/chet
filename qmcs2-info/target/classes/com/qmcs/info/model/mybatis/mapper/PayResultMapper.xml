<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmcs.info.model.mybatis.mapper.PayResultMapper">
  <resultMap id="BaseResultMap" type="com.qmcs.info.model.mybatis.model.PayResult">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="qmcs_no" jdbcType="VARCHAR" property="qmcsNo" />
    <result column="prepay_id" jdbcType="VARCHAR" property="prepayId" />
    <result column="transaction_no" jdbcType="VARCHAR" property="transactionNo" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="order_price" jdbcType="DECIMAL" property="orderPrice" />
    <result column="pay_price" jdbcType="DECIMAL" property="payPrice" />
    <result column="pay_discount" jdbcType="INTEGER" property="payDiscount" />
    <result column="bank_type" jdbcType="VARCHAR" property="bankType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, order_no, qmcs_no, prepay_id, transaction_no, pay_time, pay_status, 
    order_price, pay_price, pay_discount, bank_type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.qmcs.info.model.mybatis.model.PayResultCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pay_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_pay_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmcs.info.model.mybatis.model.PayResultCriteria">
    delete from t_pay_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmcs.info.model.mybatis.model.PayResult">
    insert into t_pay_result (id, open_id, order_no, 
      qmcs_no, prepay_id, transaction_no, 
      pay_time, pay_status, order_price, 
      pay_price, pay_discount, bank_type, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{qmcsNo,jdbcType=VARCHAR}, #{prepayId,jdbcType=VARCHAR}, #{transactionNo,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}, #{orderPrice,jdbcType=DECIMAL}, 
      #{payPrice,jdbcType=DECIMAL}, #{payDiscount,jdbcType=INTEGER}, #{bankType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qmcs.info.model.mybatis.model.PayResult">
    insert into t_pay_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="qmcsNo != null">
        qmcs_no,
      </if>
      <if test="prepayId != null">
        prepay_id,
      </if>
      <if test="transactionNo != null">
        transaction_no,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="payPrice != null">
        pay_price,
      </if>
      <if test="payDiscount != null">
        pay_discount,
      </if>
      <if test="bankType != null">
        bank_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="qmcsNo != null">
        #{qmcsNo,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null">
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="payPrice != null">
        #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="payDiscount != null">
        #{payDiscount,jdbcType=INTEGER},
      </if>
      <if test="bankType != null">
        #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qmcs.info.model.mybatis.model.PayResultCriteria" resultType="java.lang.Long">
    select count(*) from t_pay_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_pay_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.qmcsNo != null">
        qmcs_no = #{record.qmcsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.prepayId != null">
        prepay_id = #{record.prepayId,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionNo != null">
        transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payPrice != null">
        pay_price = #{record.payPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payDiscount != null">
        pay_discount = #{record.payDiscount,jdbcType=INTEGER},
      </if>
      <if test="record.bankType != null">
        bank_type = #{record.bankType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_pay_result
    set id = #{record.id,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      qmcs_no = #{record.qmcsNo,jdbcType=VARCHAR},
      prepay_id = #{record.prepayId,jdbcType=VARCHAR},
      transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      order_price = #{record.orderPrice,jdbcType=DECIMAL},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      pay_discount = #{record.payDiscount,jdbcType=INTEGER},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qmcs.info.model.mybatis.model.PayResult">
    update t_pay_result
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="qmcsNo != null">
        qmcs_no = #{qmcsNo,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        prepay_id = #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null">
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="payPrice != null">
        pay_price = #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="payDiscount != null">
        pay_discount = #{payDiscount,jdbcType=INTEGER},
      </if>
      <if test="bankType != null">
        bank_type = #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmcs.info.model.mybatis.model.PayResult">
    update t_pay_result
    set open_id = #{openId,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      qmcs_no = #{qmcsNo,jdbcType=VARCHAR},
      prepay_id = #{prepayId,jdbcType=VARCHAR},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      pay_discount = #{payDiscount,jdbcType=INTEGER},
      bank_type = #{bankType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch">
    insert into t_pay_result ( 
    id,
    open_id,
    order_no,
    qmcs_no,
    prepay_id,
    transaction_no,
    pay_time,
    pay_status,
    order_price,
    pay_price,
    pay_discount,
    bank_type,
    create_time
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.id,jdbcType=BIGINT}, 
         #{record.openId,jdbcType=VARCHAR}, 
         #{record.orderNo,jdbcType=VARCHAR}, 
         #{record.qmcsNo,jdbcType=VARCHAR}, 
         #{record.prepayId,jdbcType=VARCHAR}, 
         #{record.transactionNo,jdbcType=VARCHAR}, 
         #{record.payTime,jdbcType=TIMESTAMP}, 
         #{record.payStatus,jdbcType=INTEGER}, 
         #{record.orderPrice,jdbcType=DECIMAL}, 
         #{record.payPrice,jdbcType=DECIMAL}, 
         #{record.payDiscount,jdbcType=INTEGER}, 
         #{record.bankType,jdbcType=VARCHAR}, 
         #{record.createTime,jdbcType=TIMESTAMP}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into t_pay_result ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].id != null">
        id,
      </if>
      <if test="recordColl[0].openId != null">
        open_id,
      </if>
      <if test="recordColl[0].orderNo != null">
        order_no,
      </if>
      <if test="recordColl[0].qmcsNo != null">
        qmcs_no,
      </if>
      <if test="recordColl[0].prepayId != null">
        prepay_id,
      </if>
      <if test="recordColl[0].transactionNo != null">
        transaction_no,
      </if>
      <if test="recordColl[0].payTime != null">
        pay_time,
      </if>
      <if test="recordColl[0].payStatus != null">
        pay_status,
      </if>
      <if test="recordColl[0].orderPrice != null">
        order_price,
      </if>
      <if test="recordColl[0].payPrice != null">
        pay_price,
      </if>
      <if test="recordColl[0].payDiscount != null">
        pay_discount,
      </if>
      <if test="recordColl[0].bankType != null">
        bank_type,
      </if>
      <if test="recordColl[0].createTime != null">
        create_time,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.id != null">
           #{record.id,jdbcType=BIGINT}, 
        </if>
        <if test="record.openId != null">
           #{record.openId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.orderNo != null">
           #{record.orderNo,jdbcType=VARCHAR}, 
        </if>
        <if test="record.qmcsNo != null">
           #{record.qmcsNo,jdbcType=VARCHAR}, 
        </if>
        <if test="record.prepayId != null">
           #{record.prepayId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.transactionNo != null">
           #{record.transactionNo,jdbcType=VARCHAR}, 
        </if>
        <if test="record.payTime != null">
           #{record.payTime,jdbcType=TIMESTAMP}, 
        </if>
        <if test="record.payStatus != null">
           #{record.payStatus,jdbcType=INTEGER}, 
        </if>
        <if test="record.orderPrice != null">
           #{record.orderPrice,jdbcType=DECIMAL}, 
        </if>
        <if test="record.payPrice != null">
           #{record.payPrice,jdbcType=DECIMAL}, 
        </if>
        <if test="record.payDiscount != null">
           #{record.payDiscount,jdbcType=INTEGER}, 
        </if>
        <if test="record.bankType != null">
           #{record.bankType,jdbcType=VARCHAR}, 
        </if>
        <if test="record.createTime != null">
           #{record.createTime,jdbcType=TIMESTAMP}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>